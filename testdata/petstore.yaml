openapi: "3.1.0"
info:
    version: 1.0.0
    title: Swagger Petstore
    description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
    termsOfService: http://swagger.io/terms/
    contact:
        name: Swagger API Team
        email: apiteam@swagger.io
        url: http://swagger.io
    license:
        name: Apache 2.0
        url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
    - url: http://petstore.swagger.io/api

paths:
    /generic:
        # parameters:
        #   - name: objparam
        #     style:
        post:
            operationId: createGenericMap
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/StringMap"
            responses:
                "200":
                    description: string response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/StringMap"
    /pets:
        parameters:
            - name: globalPetsParam
              required: false
              style: form
              in: query
              schema:
                  type: string
        get:
            summary: Returns all pets
            description: |
                Returns all pets from the system that the user has access to
                Nam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.

                Sed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.
            operationId: findPets
            parameters:
                # - name: tags
                #   in: query
                #   description: tags to filter by
                #   required: false
                #   style: form
                #   schema:
                #       type: array
                #       items:
                #           type: string
                - name: filter
                  in: query
                  required: false
                  schema:
                      $ref: "#/components/schemas/PetFilter"
                - name: limit
                  in: query
                  description: maximum number of results to return
                  required: false
                  schema:
                      type: integer
                      format: int32
            responses:
                "200":
                    description: pet response
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Pet"
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
        post:
            summary: Creates a new pet
            description: Creates a new pet in the store. Duplicates are allowed
            operationId: addPet
            requestBody:
                description: Pet to add to the store
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/NewPet"
            responses:
                "200":
                    description: pet response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Pet"
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /pets/{_id}:
        get:
            operationId: findPetByID
            summary: Returns a pet by ID
            description: Returns a pet based on a single ID
            parameters:
                - name: _id
                  in: path
                  description: ID of pet to fetch
                  required: true
                  schema:
                      type: string
                      format: uuid
            responses:
                "200":
                    description: pet response
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Pet"
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
        delete:
            summary: Deletes a pet by ID
            description: deletes a single pet based on the ID supplied
            operationId: deletePet
            parameters:
                - name: _id
                  in: path
                  description: ID of pet to delete
                  required: true
                  schema:
                      type: string
                      format: uuid
            responses:
                "204":
                    description: pet deleted
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
components:
    schemas:
        FilterItem:
            type: object
            properties:
                include:
                    type: string
                exclude:
                    type: string
        StringMap:
            type: object
            additionalProperties:
                type: string
        PetFilter:
            type: object
            properties:
                tags:
                    type: array
                    items:
                        type: string
                kind:
                    type: string
                nested:
                    type: object
                    properties:
                        prop:
                            type: string
            additionalProperties:
                $ref: "#/components/schemas/FilterItem"
        Pet:
            allOf:
                - $ref: "#/components/schemas/NewPet"
                - required:
                      - _id
                  properties:
                      _id:
                          type: string
                          format: uuid
                          description: Unique id of the pet

        NewPet:
            required:
                - name
            properties:
                name:
                    type: string
                    description: Name of the pet
                tag:
                    type: string
                    description: Type of the pet
                kind:
                    type: string
                extra:
                    anyOf:
                        - type: object
                          properties:
                              firstField:
                                  type: string
                        - type: string
            additionalProperties:
                type: string
        GenericError:
            type: object
            properties:
                statusCode:
                    type: number
                error:
                    type: string
            additionalProperties: true
        ValidationError:
            type: object
            properties:
                parameters:
                    $ref: "#/components/schemas/ValidationErrorOutputUnit"
                body:
                    $ref: "#/components/schemas/ValidationErrorOutputUnit"
        ValidationErrorOutputUnitArray:
            type: array
            items:
                $ref: "#/components/schemas/ValidationErrorOutputUnit"
        ValidationErrorOutputUnit:
            description: A schema that validates the minimum requirements for validation output
            properties:
                valid:
                    type: boolean
                keywordLocation:
                    type: string
                    format: uri-reference
                absoluteKeywordLocation:
                    type: string
                    format: uri
                instanceLocation:
                    type: string
                    format: uri-reference
                errors:
                    $ref: "#/components/schemas/ValidationErrorOutputUnitArray"
                annotations:
                    $ref: "#/components/schemas/ValidationErrorOutputUnitArray"
            required:
                - valid
                - keywordLocation
                - instanceLocation

        Error:
            type: object
            properties:
                error:
                    type: string
            # oneOf:
            # - $ref: "#/components/schemas/ValidationError"
            # - $ref: "#/components/schemas/GenericError"
